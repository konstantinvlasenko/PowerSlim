This page executes the Suite tests via !-FitNesse's RESTful-! services. This is done to test for expected exceptions on the tests, which can't be tested directly from a test table because the expected result is in fact an exception.

Note: The test pages themselves are disabled in the suite, which makes sure they don't run individually when the suite is run but are instead executed from this page only. To understand how the tests below actually work, the test pages can actually be run by themselves so one can see the exceptions that they produce.

!*****> Define variables and scenario for the RESTful service invocation
!define Server     {localhost}
!define Inputs     {format=xml}
!define RootUrl    (!-http://-!${Server}:${FITNESSE_PORT})


|scenario|To prove test page continues after normal exceptions _|TESTPAGE, EXCEPTION_TEXT, PROOF_TESTS_CONTINUED               |
|$URL=   |eval                                                  |'${RootUrl}/@TESTPAGE?test&${Inputs}'                         |
|eval    |$results = Run-Test '$URL'                                                                                           |
|check   |eval                                                  |$results.testResults.result.content|=~/@EXCEPTION_TEXT/       |
|check   |eval                                                  |$results.testResults.result.content|=~/@PROOF_TESTS_CONTINUED/|

|scenario|To prove test page aborted after failure _|TESTPAGE, PAGETYPE, FIRST_EXCEPTION, NEXT_EXCEPTION, PROOF_TESTING_STOPPED|
|$URL=   |eval                                      |'${RootUrl}/@TESTPAGE?@PAGETYPE&${Inputs}'                                |
|eval    |$results = Run-Test '$URL'                                                                                           |
|check   |eval                                      |$results.testResults.result.content      |=~/@FIRST_EXCEPTION/            |
|check   |eval                                      |$results.testResults.result.content      |=~/@NEXT_EXCEPTION/             |
|check   |eval                                      |$results.testResults.result.content      |=~/@PROOF_TESTING_STOPPED/      |

|scenario|To prove suite pages aborted after failure _|TESTPAGE, PAGETYPE, FIRST_EXCEPTION, NEXT_EXCEPTION, PROOF_TESTING_STOPPED|
|$URL=   |eval                                        |'${RootUrl}/@TESTPAGE?@PAGETYPE&${Inputs}'                                |
|eval    |$results = Run-Test '$URL'                                                                                             |
|eval    |$page1   = Run-Test "${RootUrl}/$($results.testresults.result[0].pagehistorylink)&format=xml"                          |
|eval    |$page2   = Run-Test "${RootUrl}/$($results.testresults.result[1].pagehistorylink)&format=xml"                          |
|check   |eval                                        |$page1.testResults.result.content       |=~/@FIRST_EXCEPTION/             |
|check   |eval                                        |$page1.testResults.result.content       |=~/@NEXT_EXCEPTION/              |
|check   |eval                                        |$page2.testResults.result.content       |=~/@PROOF_TESTING_STOPPED/       |

******!

The following tests show how normal exceptions are now handled. The error details are returned to !-FitNesse-! and displayed as an exception - neither a success or failure - and testing continues.

!| To prove test page continues after normal exceptions                                                                                                                      |
|TESTPAGE                                                                  |EXCEPTION_TEXT                                                             |PROOF_TESTS_CONTINUED|
|PowerSlim.OriginalMode.SuiteExceptions.TestCases.RunTimeException         |__EXCEPTION__:[^<>]*Attempted to divide by zero                            |2\+2=4               |


You can also enable $NonTerminatingIsException if you want to view all the errors, including non terminating.

!| To prove test page continues after normal exceptions                                                                                                                      |
|TESTPAGE                                                                  |EXCEPTION_TEXT                                                             |PROOF_TESTS_CONTINUED|
|PowerSlim.OriginalMode.SuiteExceptions.TestCases.NonTerminatingIsException|__EXCEPTION__:[^<>]*Get-Service : Cannot find any service with service name|2\+2=4               |

Next, test that aborting works correctly. When a test aborts, it should not run any more tests in the table in which it encountered an error, and !-FitNesse-! should recognize the abort and then not run any more tests that follow.

To abort a test or a suite the developer can issue a {{{ throw "StopTest" }}} This is useful when certain critical errors have occurred, such as failing to connect to a test database or some other problem.

!| To prove test page aborted after failure                                                                                                                                                       |
|TESTPAGE                                                               |PAGETYPE|FIRST_EXCEPTION                                  |NEXT_EXCEPTION                          |PROOF_TESTING_STOPPED|
|PowerSlim.OriginalMode.SuiteExceptions.TestCases.AbortExceptionStopTest|test    |"fail">__EXCEPTION__:ABORT_SLIM_TEST:Test aborted|"fail">ABORT_TEST_INDICATED:Test not run|"ignore">Test not run|

!| To prove suite pages aborted after failure                                                                                                                                                                                       |
|TESTPAGE                                                                                                |PAGETYPE|FIRST_EXCEPTION                                   |NEXT_EXCEPTION                          |PROOF_TESTING_STOPPED|
|PowerSlim.OriginalMode.SuiteExceptions.TestCases.AbortExceptionStopSuiteTestPage.AbortExceptionStopSuite|suite   |"fail">__EXCEPTION__:ABORT_SLIM_TEST:Suite aborted|"fail">ABORT_TEST_INDICATED:Test not run|"ignore">Test not run|
